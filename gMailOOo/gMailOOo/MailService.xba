<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="MailService" script:language="StarBasic">REM  *****  BASIC  *****

Option Explicit


Private oMailService As Object
Private oSmtpServer As Object
Private oSmtpUser As Object
Const sConfigPath = &quot;/org.openoffice.Office.Writer/MailMergeWizard&quot;


Function GetConfigSetting(sPath As String, _
						  sName As String) As String
Dim oConfig As Variant
Dim oSetting As Object
Dim mArgs(0) As New com.sun.star.beans.PropertyValue
	mArgs(0).Name = &quot;nodepath&quot;
	mArgs(0).Value = sPath
	oConfig = createUnoService(&quot;com.sun.star.configuration.ConfigurationProvider&quot;)
	oSetting = oConfig.createInstanceWithArguments(&quot;com.sun.star.configuration.ConfigurationAccess&quot;, mArgs())
	GetConfigSetting() = oSetting.getByName(sName)
End Function


Function GetMailService() As Object
	If StartMailService() Then
		GetMailService() = oMailService
	End If
End Function


Sub ConnectMailService()
	oMailService.Connect(oMailServer, oMailUser)
End Sub


Sub DisconnectMailService()
	If oMailService.isConnected() Then
		oMailService.disconnect()
	End If
End Sub


Function MailServer_getValueByName(sName) As Any
	Select Case sName
		Case &quot;ServerName&quot;
			MailServer_getValueByName() = GetConfigSetting(sConfigPath, &quot;MailServer&quot;)
		Case &quot;Port&quot;
			MailServer_getValueByName() = GetConfigSetting(sConfigPath, &quot;MailPort&quot;)
		Case &quot;ConnectionType&quot;
			If GetConfigSetting(sConfigPath, &quot;IsSecureConnection&quot;) Then
				MailServer_getValueByName() = &quot;SSL&quot;
			Else
				MailServer_getValueByName() = &quot;Insecure&quot;
			End If	
	End Select
End Function


Function MailUser_getUserName() As Any
	MailUser_getUserName() = GetConfigSetting(sConfigPath, &quot;MailUserName&quot;)
End Function


Function MailUser_getPassword() As Any
	MailUser_getPassword() = GetConfigSetting(sConfigPath, &quot;MailPassword&quot;)
End Function


Function StartMailService() As Boolean
Dim oProvider As Variant
	On Error Goto ErrorHandler
	If IsNull(oMailService) Then
		oProvider    = CreateUnoService(&quot;com.sun.star.mail.MailServiceProvider&quot;)
		oMailService = oProvider.Create(&quot;com.sun.star.mail.SMTP&quot;)
		oMailServer  = CreateUnoListener(&quot;MailServer_&quot;, &quot;com.sun.star.uno.XCurrentContext&quot;)
		oMailUser    = CreateUnoListener(&quot;MailUser_&quot;, &quot;com.sun.star.mail.XAuthenticator&quot;)
	End If
	StartMailService() = True
	On Error Goto 0
	Exit Function
ErrorHandler:
	On Error Goto 0
End Function

</script:module>